// backend/tests/integration/doctor.api.test.js
import request from 'supertest';
import { app } from '../../src/lib/socket.js';
import { Doctor } from '../../src/models/Doctor.js';

describe('Doctor API Endpoints', () => {
  let authToken;
  let doctorId;

  beforeEach(async () => {
    // Create test doctor and get auth token
    const doctor = await Doctor.create({
      name: 'Test Doctor',
      email: 'test@doctor.com',
      password: 'password123',
      specialization: 'General Medicine',
      experience: 5,
      qualification: 'MBBS'
    });
    doctorId = doctor._id;

    const loginResponse = await request(app)
      .post('/api/auth/login')
      .send({
        email: 'test@doctor.com',
        password: 'password123',
        role: 'doctor'
      });

    authToken = loginResponse.headers['set-cookie'];
  });

  it('should get doctor profile', async () => {
    const response = await request(app)
      .get(`/api/doctors/${doctorId}`)
      .set('Cookie', authToken)
      .expect(200);

    expect(response.body.success).toBe(true);
    expect(response.body.doctor.name).toBe('Test Doctor');
  });

  it('should update doctor schedule', async () => {
    const scheduleData = {
      schedule: [{
        day: 'Monday',
        slots: [{
          slotNumber: 1,
          startTime: '09:00',
          endTime: '10:00',
          isAvailable: true
        }]
      }]
    };

    const response = await request(app)
      .put('/api/doctors/profile')
      .set('Cookie', authToken)
      .send(scheduleData)
      .expect(200);

    expect(response.body.success).toBe(true);
    expect(response.body.doctor.schedule).toHaveLength(1);
  });
});